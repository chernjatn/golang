// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: invsvc.proto

package invsvc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InventorySourceType int32

const (
	InventorySourceType_MAIN      InventorySourceType = 0
	InventorySourceType_DARKSTORE InventorySourceType = 3
)

// Enum value maps for InventorySourceType.
var (
	InventorySourceType_name = map[int32]string{
		0: "MAIN",
		3: "DARKSTORE",
	}
	InventorySourceType_value = map[string]int32{
		"MAIN":      0,
		"DARKSTORE": 3,
	}
)

func (x InventorySourceType) Enum() *InventorySourceType {
	p := new(InventorySourceType)
	*p = x
	return p
}

func (x InventorySourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InventorySourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_invsvc_proto_enumTypes[0].Descriptor()
}

func (InventorySourceType) Type() protoreflect.EnumType {
	return &file_invsvc_proto_enumTypes[0]
}

func (x InventorySourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InventorySourceType.Descriptor instead.
func (InventorySourceType) EnumDescriptor() ([]byte, []int) {
	return file_invsvc_proto_rawDescGZIP(), []int{0}
}

type ProductInventory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quantity      uint32 `protobuf:"varint,1,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price         uint64 `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	DiscountPrice uint64 `protobuf:"varint,3,opt,name=discount_price,json=discountPrice,proto3" json:"discount_price,omitempty"`
	Sum           uint64 `protobuf:"varint,4,opt,name=sum,proto3" json:"sum,omitempty"`
	DiscountSum   uint64 `protobuf:"varint,5,opt,name=discount_sum,json=discountSum,proto3" json:"discount_sum,omitempty"`
	ValidDate     string `protobuf:"bytes,6,opt,name=valid_date,json=validDate,proto3" json:"valid_date,omitempty"`
}

func (x *ProductInventory) Reset() {
	*x = ProductInventory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invsvc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInventory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInventory) ProtoMessage() {}

func (x *ProductInventory) ProtoReflect() protoreflect.Message {
	mi := &file_invsvc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInventory.ProtoReflect.Descriptor instead.
func (*ProductInventory) Descriptor() ([]byte, []int) {
	return file_invsvc_proto_rawDescGZIP(), []int{0}
}

func (x *ProductInventory) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ProductInventory) GetPrice() uint64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ProductInventory) GetDiscountPrice() uint64 {
	if x != nil {
		return x.DiscountPrice
	}
	return 0
}

func (x *ProductInventory) GetSum() uint64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

func (x *ProductInventory) GetDiscountSum() uint64 {
	if x != nil {
		return x.DiscountSum
	}
	return 0
}

func (x *ProductInventory) GetValidDate() string {
	if x != nil {
		return x.ValidDate
	}
	return ""
}

type ProductInventoryFull struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quantity      uint32              `protobuf:"varint,1,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price         uint64              `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	DiscountPrice uint64              `protobuf:"varint,3,opt,name=discount_price,json=discountPrice,proto3" json:"discount_price,omitempty"`
	Sum           uint64              `protobuf:"varint,4,opt,name=sum,proto3" json:"sum,omitempty"`
	DiscountSum   uint64              `protobuf:"varint,5,opt,name=discount_sum,json=discountSum,proto3" json:"discount_sum,omitempty"`
	ValidDate     string              `protobuf:"bytes,6,opt,name=valid_date,json=validDate,proto3" json:"valid_date,omitempty"`
	IsId          uint32              `protobuf:"varint,7,opt,name=is_id,json=isId,proto3" json:"is_id,omitempty"`
	StoreId       uint32              `protobuf:"varint,8,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	IsType        InventorySourceType `protobuf:"varint,9,opt,name=is_type,json=isType,proto3,enum=inventory.InventorySourceType" json:"is_type,omitempty"`
	IsVaries      bool                `protobuf:"varint,10,opt,name=is_varies,json=isVaries,proto3" json:"is_varies,omitempty"`
}

func (x *ProductInventoryFull) Reset() {
	*x = ProductInventoryFull{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invsvc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInventoryFull) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInventoryFull) ProtoMessage() {}

func (x *ProductInventoryFull) ProtoReflect() protoreflect.Message {
	mi := &file_invsvc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInventoryFull.ProtoReflect.Descriptor instead.
func (*ProductInventoryFull) Descriptor() ([]byte, []int) {
	return file_invsvc_proto_rawDescGZIP(), []int{1}
}

func (x *ProductInventoryFull) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ProductInventoryFull) GetPrice() uint64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ProductInventoryFull) GetDiscountPrice() uint64 {
	if x != nil {
		return x.DiscountPrice
	}
	return 0
}

func (x *ProductInventoryFull) GetSum() uint64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

func (x *ProductInventoryFull) GetDiscountSum() uint64 {
	if x != nil {
		return x.DiscountSum
	}
	return 0
}

func (x *ProductInventoryFull) GetValidDate() string {
	if x != nil {
		return x.ValidDate
	}
	return ""
}

func (x *ProductInventoryFull) GetIsId() uint32 {
	if x != nil {
		return x.IsId
	}
	return 0
}

func (x *ProductInventoryFull) GetStoreId() uint32 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *ProductInventoryFull) GetIsType() InventorySourceType {
	if x != nil {
		return x.IsType
	}
	return InventorySourceType_MAIN
}

func (x *ProductInventoryFull) GetIsVaries() bool {
	if x != nil {
		return x.IsVaries
	}
	return false
}

type GetInventoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsId      uint32 `protobuf:"varint,1,opt,name=is_id,json=isId,proto3" json:"is_id,omitempty"`
	RegionId  uint32 `protobuf:"varint,2,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	ProductId uint32 `protobuf:"varint,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Quantity  uint32 `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *GetInventoryRequest) Reset() {
	*x = GetInventoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invsvc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryRequest) ProtoMessage() {}

func (x *GetInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invsvc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryRequest.ProtoReflect.Descriptor instead.
func (*GetInventoryRequest) Descriptor() ([]byte, []int) {
	return file_invsvc_proto_rawDescGZIP(), []int{2}
}

func (x *GetInventoryRequest) GetIsId() uint32 {
	if x != nil {
		return x.IsId
	}
	return 0
}

func (x *GetInventoryRequest) GetRegionId() uint32 {
	if x != nil {
		return x.RegionId
	}
	return 0
}

func (x *GetInventoryRequest) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *GetInventoryRequest) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type GetInventoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *ProductInventory `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *GetInventoryResponse) Reset() {
	*x = GetInventoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invsvc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryResponse) ProtoMessage() {}

func (x *GetInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invsvc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryResponse.ProtoReflect.Descriptor instead.
func (*GetInventoryResponse) Descriptor() ([]byte, []int) {
	return file_invsvc_proto_rawDescGZIP(), []int{3}
}

func (x *GetInventoryResponse) GetItem() *ProductInventory {
	if x != nil {
		return x.Item
	}
	return nil
}

type GetRegionInventoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId  uint32 `protobuf:"varint,1,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	ProductId uint32 `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Quantity  uint32 `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *GetRegionInventoryRequest) Reset() {
	*x = GetRegionInventoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invsvc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegionInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegionInventoryRequest) ProtoMessage() {}

func (x *GetRegionInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_invsvc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegionInventoryRequest.ProtoReflect.Descriptor instead.
func (*GetRegionInventoryRequest) Descriptor() ([]byte, []int) {
	return file_invsvc_proto_rawDescGZIP(), []int{4}
}

func (x *GetRegionInventoryRequest) GetRegionId() uint32 {
	if x != nil {
		return x.RegionId
	}
	return 0
}

func (x *GetRegionInventoryRequest) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *GetRegionInventoryRequest) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type GetRegionInventoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ProductInventoryFull `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetRegionInventoryResponse) Reset() {
	*x = GetRegionInventoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invsvc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegionInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegionInventoryResponse) ProtoMessage() {}

func (x *GetRegionInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invsvc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegionInventoryResponse.ProtoReflect.Descriptor instead.
func (*GetRegionInventoryResponse) Descriptor() ([]byte, []int) {
	return file_invsvc_proto_rawDescGZIP(), []int{5}
}

func (x *GetRegionInventoryResponse) GetItems() []*ProductInventoryFull {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetRegionMaxInventoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *ProductInventoryFull `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *GetRegionMaxInventoryResponse) Reset() {
	*x = GetRegionMaxInventoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invsvc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegionMaxInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegionMaxInventoryResponse) ProtoMessage() {}

func (x *GetRegionMaxInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invsvc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegionMaxInventoryResponse.ProtoReflect.Descriptor instead.
func (*GetRegionMaxInventoryResponse) Descriptor() ([]byte, []int) {
	return file_invsvc_proto_rawDescGZIP(), []int{6}
}

func (x *GetRegionMaxInventoryResponse) GetItem() *ProductInventoryFull {
	if x != nil {
		return x.Item
	}
	return nil
}

type GetRegionLastInventoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *ProductInventoryFull `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *GetRegionLastInventoryResponse) Reset() {
	*x = GetRegionLastInventoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invsvc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegionLastInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegionLastInventoryResponse) ProtoMessage() {}

func (x *GetRegionLastInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invsvc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegionLastInventoryResponse.ProtoReflect.Descriptor instead.
func (*GetRegionLastInventoryResponse) Descriptor() ([]byte, []int) {
	return file_invsvc_proto_rawDescGZIP(), []int{7}
}

func (x *GetRegionLastInventoryResponse) GetItem() *ProductInventoryFull {
	if x != nil {
		return x.Item
	}
	return nil
}

type GetRegionStoreHasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items map[uint32]uint32 `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetRegionStoreHasResponse) Reset() {
	*x = GetRegionStoreHasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invsvc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegionStoreHasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegionStoreHasResponse) ProtoMessage() {}

func (x *GetRegionStoreHasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invsvc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegionStoreHasResponse.ProtoReflect.Descriptor instead.
func (*GetRegionStoreHasResponse) Descriptor() ([]byte, []int) {
	return file_invsvc_proto_rawDescGZIP(), []int{8}
}

func (x *GetRegionStoreHasResponse) GetItems() map[uint32]uint32 {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetRegionStoreHasCntResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cnt uint32 `protobuf:"varint,1,opt,name=cnt,proto3" json:"cnt,omitempty"`
}

func (x *GetRegionStoreHasCntResponse) Reset() {
	*x = GetRegionStoreHasCntResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_invsvc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegionStoreHasCntResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegionStoreHasCntResponse) ProtoMessage() {}

func (x *GetRegionStoreHasCntResponse) ProtoReflect() protoreflect.Message {
	mi := &file_invsvc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegionStoreHasCntResponse.ProtoReflect.Descriptor instead.
func (*GetRegionStoreHasCntResponse) Descriptor() ([]byte, []int) {
	return file_invsvc_proto_rawDescGZIP(), []int{9}
}

func (x *GetRegionStoreHasCntResponse) GetCnt() uint32 {
	if x != nil {
		return x.Cnt
	}
	return 0
}

var File_invsvc_proto protoreflect.FileDescriptor

var file_invsvc_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x73, 0x76, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x22, 0xbf, 0x01, 0x0a, 0x10, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0xc9, 0x02, 0x0a, 0x14,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x46, 0x75, 0x6c, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x6d, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x13, 0x0a, 0x05, 0x69, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x69, 0x73, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x64, 0x12, 0x37, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x06, 0x69, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x76, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x56, 0x61, 0x72, 0x69, 0x65, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x13, 0x0a, 0x05, 0x69, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x69, 0x73, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x47, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x73, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x53, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x46, 0x75, 0x6c, 0x6c, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x54, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x78, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x33, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x46, 0x75, 0x6c, 0x6c, 0x52,
	0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x55, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x46, 0x75, 0x6c, 0x6c, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x9c, 0x01, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x48,
	0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x48, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x30, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x48, 0x61, 0x73,
	0x43, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x6e, 0x74, 0x2a, 0x2e, 0x0a,
	0x13, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x41, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x0d,
	0x0a, 0x09, 0x44, 0x41, 0x52, 0x4b, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x10, 0x03, 0x32, 0xe4, 0x04,
	0x0a, 0x06, 0x49, 0x6e, 0x76, 0x73, 0x76, 0x63, 0x12, 0x51, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1e, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x24, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x69, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x78,
	0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x2e, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x78, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x48, 0x61, 0x73, 0x12, 0x24, 0x2e,
	0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x48, 0x61,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x48, 0x61, 0x73,
	0x43, 0x6e, 0x74, 0x12, 0x24, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x48, 0x61, 0x73, 0x43, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x11, 0x5a, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2f, 0x69, 0x6e, 0x76, 0x73, 0x76, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_invsvc_proto_rawDescOnce sync.Once
	file_invsvc_proto_rawDescData = file_invsvc_proto_rawDesc
)

func file_invsvc_proto_rawDescGZIP() []byte {
	file_invsvc_proto_rawDescOnce.Do(func() {
		file_invsvc_proto_rawDescData = protoimpl.X.CompressGZIP(file_invsvc_proto_rawDescData)
	})
	return file_invsvc_proto_rawDescData
}

var file_invsvc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_invsvc_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_invsvc_proto_goTypes = []interface{}{
	(InventorySourceType)(0),               // 0: inventory.InventorySourceType
	(*ProductInventory)(nil),               // 1: inventory.ProductInventory
	(*ProductInventoryFull)(nil),           // 2: inventory.ProductInventoryFull
	(*GetInventoryRequest)(nil),            // 3: inventory.GetInventoryRequest
	(*GetInventoryResponse)(nil),           // 4: inventory.GetInventoryResponse
	(*GetRegionInventoryRequest)(nil),      // 5: inventory.GetRegionInventoryRequest
	(*GetRegionInventoryResponse)(nil),     // 6: inventory.GetRegionInventoryResponse
	(*GetRegionMaxInventoryResponse)(nil),  // 7: inventory.GetRegionMaxInventoryResponse
	(*GetRegionLastInventoryResponse)(nil), // 8: inventory.GetRegionLastInventoryResponse
	(*GetRegionStoreHasResponse)(nil),      // 9: inventory.GetRegionStoreHasResponse
	(*GetRegionStoreHasCntResponse)(nil),   // 10: inventory.GetRegionStoreHasCntResponse
	nil,                                    // 11: inventory.GetRegionStoreHasResponse.ItemsEntry
}
var file_invsvc_proto_depIdxs = []int32{
	0,  // 0: inventory.ProductInventoryFull.is_type:type_name -> inventory.InventorySourceType
	1,  // 1: inventory.GetInventoryResponse.item:type_name -> inventory.ProductInventory
	2,  // 2: inventory.GetRegionInventoryResponse.items:type_name -> inventory.ProductInventoryFull
	2,  // 3: inventory.GetRegionMaxInventoryResponse.item:type_name -> inventory.ProductInventoryFull
	2,  // 4: inventory.GetRegionLastInventoryResponse.item:type_name -> inventory.ProductInventoryFull
	11, // 5: inventory.GetRegionStoreHasResponse.items:type_name -> inventory.GetRegionStoreHasResponse.ItemsEntry
	3,  // 6: inventory.Invsvc.GetInventory:input_type -> inventory.GetInventoryRequest
	5,  // 7: inventory.Invsvc.GetRegionInventory:input_type -> inventory.GetRegionInventoryRequest
	5,  // 8: inventory.Invsvc.GetRegionMaxInventory:input_type -> inventory.GetRegionInventoryRequest
	5,  // 9: inventory.Invsvc.GetRegionLastInventory:input_type -> inventory.GetRegionInventoryRequest
	5,  // 10: inventory.Invsvc.GetRegionStoreHas:input_type -> inventory.GetRegionInventoryRequest
	5,  // 11: inventory.Invsvc.GetRegionStoreHasCnt:input_type -> inventory.GetRegionInventoryRequest
	4,  // 12: inventory.Invsvc.GetInventory:output_type -> inventory.GetInventoryResponse
	6,  // 13: inventory.Invsvc.GetRegionInventory:output_type -> inventory.GetRegionInventoryResponse
	7,  // 14: inventory.Invsvc.GetRegionMaxInventory:output_type -> inventory.GetRegionMaxInventoryResponse
	8,  // 15: inventory.Invsvc.GetRegionLastInventory:output_type -> inventory.GetRegionLastInventoryResponse
	9,  // 16: inventory.Invsvc.GetRegionStoreHas:output_type -> inventory.GetRegionStoreHasResponse
	10, // 17: inventory.Invsvc.GetRegionStoreHasCnt:output_type -> inventory.GetRegionStoreHasCntResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_invsvc_proto_init() }
func file_invsvc_proto_init() {
	if File_invsvc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_invsvc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductInventory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invsvc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductInventoryFull); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invsvc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInventoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invsvc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInventoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invsvc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegionInventoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invsvc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegionInventoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invsvc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegionMaxInventoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invsvc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegionLastInventoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invsvc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegionStoreHasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_invsvc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegionStoreHasCntResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_invsvc_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_invsvc_proto_goTypes,
		DependencyIndexes: file_invsvc_proto_depIdxs,
		EnumInfos:         file_invsvc_proto_enumTypes,
		MessageInfos:      file_invsvc_proto_msgTypes,
	}.Build()
	File_invsvc_proto = out.File
	file_invsvc_proto_rawDesc = nil
	file_invsvc_proto_goTypes = nil
	file_invsvc_proto_depIdxs = nil
}
